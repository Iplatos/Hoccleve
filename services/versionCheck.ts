import * as Application from 'expo-application'
import { Platform, Alert, Linking } from 'react-native'

class VersionCheckService {
  // URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–π
  static STORE_URLS = {
    ios: 'https://itunes.apple.com/lookup?bundleId=com.ipla.hoccleve',
    android: 'https://play.google.com/store/apps/details?id=com.ipla.hoccleve&hl=en',
  }

  // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  static TEST_MODE = false
  static TEST_VERSION = '1.0.4' // –í–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  async checkForUpdate() {
    try {
      const currentVersion = Application.nativeApplicationVersion
      console.log('üì± –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', currentVersion)

      // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (this.constructor.TEST_MODE) {
        console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')
        this.showUpdateAlert()
        return true
      }

      const storeVersion = await this.getStoreVersion()
      console.log('üõí –í–µ—Ä—Å–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ:', storeVersion)

      if (storeVersion && this.compareVersions(storeVersion, currentVersion) > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è!')
        this.showUpdateAlert()
        return true
      } else {
        console.log('‚ÑπÔ∏è –£ –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
      }
      return false
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error)
      return false
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –∏–∑ app store / google play
  async getStoreVersion() {
    try {
      if (Platform.OS === 'ios') {
        return await this.getIOSVersion()
      } else {
        return await this.getAndroidVersion()
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞:', error)
      return null
    }
  }

  // –î–ª—è iOS - –∏—Å–ø–æ–ª—å–∑—É–µ–º iTunes API
  async getIOSVersion() {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –≤ App Store...')
      const response = await fetch(this.constructor.STORE_URLS.ios)
      const data = await response.json()

      if (data.results && data.results.length > 0) {
        const version = data.results[0].version
        console.log('üçé iOS –≤–µ—Ä—Å–∏—è –≤ App Store:', version)
        return version
      }
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ App Store')
      return null
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è iOS –≤–µ—Ä—Å–∏–∏:', error)
      return null
    }
  }

  // –î–ª—è Android - –ø–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Google Play
  // –î–ª—è Android - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Google Play API
  async getAndroidVersion() {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –≤ Google Play...')

      // –°–ø–æ—Å–æ–± 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Play Store API
      const playStoreUrl = `https://play.google.com/store/apps/details?id=com.ipla.hoccleve&hl=en`
      const response = await fetch(playStoreUrl)
      const text = await response.text()

      // –†–∞–∑–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–µ—Ä—Å–∏–∏
      const patterns = [
        /<div[^>]*>Current Version<\/div><div[^>]*><span[^>]*>([0-9.]+)<\/span>/,
        /\[\[\[\"([0-9.]+)\"\]\]/,
        /"version":"([0-9.]+)"/,
        /Current Version.+?([0-9.]+)</,
        /itemprop="softwareVersion">([0-9.]+)</,
        /\[\[\["([0-9.]+)"\]\]/,
        /<div[^>]*class="[^"]*BgcNfc[^"]*"[^>]*>Current Version<\/div><span[^>]*>([0-9.]+)<\/span>/,
        /softwareVersion[^>]*>([0-9.]+)</,
      ]

      for (const pattern of patterns) {
        const match = text.match(pattern)
        if (match && match[1]) {
          const version = match[1]
          console.log('ü§ñ Android –≤–µ—Ä—Å–∏—è –≤ Google Play:', version)
          return version
        }
      }

      // –°–ø–æ—Å–æ–± 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–∏—Å—ã-–ø—Ä–æ–∫—Å–∏
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...')
      const altVersion = await this.getAndroidVersionAlternative()
      if (altVersion) {
        return altVersion
      }

      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–µ—Ä—Å–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Google Play')
      return null
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Android –≤–µ—Ä—Å–∏–∏:', error)
      // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      return await this.getAndroidVersionAlternative()
    }
  }

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è Android
  async getAndroidVersionAlternative() {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Google Play
      const proxyUrl = `https://api.playstoreapi.xyz/v1/app/com.ipla.hoccleve`

      const response = await fetch(proxyUrl)
      const data = await response.json()

      if (data && data.version) {
        console.log('ü§ñ Android –≤–µ—Ä—Å–∏—è —á–µ—Ä–µ–∑ API:', data.version)
        return data.version
      }

      return null
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞:', error)
      return null
    }
  }
  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
  compareVersions(version1, version2) {
    console.log(version1)

    const v1 = version1.split('.').map(Number)
    const v2 = version2.split('.').map(Number)

    for (let i = 0; i < Math.max(v1.length, v2.length); i++) {
      const num1 = v1[i] || 0
      const num2 = v2[i] || 0

      if (num1 > num2) return 1
      if (num1 < num2) return -1
    }

    return 0
  }

  // –ü–æ–∫–∞–∑ –∞–ª–µ—Ä—Ç–∞ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –æ–±–Ω–æ–≤–∏—Ç—å
  showUpdateAlert() {
    Alert.alert(
      '–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ üì±',
      '–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –û–±–Ω–æ–≤–∏—Ç–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.',
      [
        {
          text: '–û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å',
          onPress: () => this.openStore(),
          style: 'default',
        },
        {
          text: '–ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ',
          style: 'cancel',
          onPress: () => console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ª–æ–∂–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'),
        },
      ],
      { cancelable: false }
    )
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  openStore() {
    console.log('üì≤ –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–∞–≥–∞–∑–∏–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...')

    if (Platform.OS === 'ios') {
      // –î–ª—è iOS —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º App Store
      const iosUrl = 'itms-apps://itunes.apple.com/app/com.ipla.hoccleve'
      console.log('üçé –û—Ç–∫—Ä—ã–≤–∞–µ–º App Store...')

      Linking.openURL(iosUrl).catch((err) => {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å App Store —á–µ—Ä–µ–∑ —Å—Ö–µ–º—É, –ø—Ä–æ–±—É–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é...')
        const webUrl = 'https://apps.apple.com/app/com.ipla.hoccleve'
        Linking.openURL(webUrl)
      })
    } else {
      // –î–ª—è Android —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º Google Play
      const androidUrl = 'market://details?id=com.ipla.hoccleve'
      console.log('ü§ñ –û—Ç–∫—Ä—ã–≤–∞–µ–º Google Play...')

      Linking.openURL(androidUrl).catch((err) => {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Google Play —á–µ—Ä–µ–∑ —Å—Ö–µ–º—É, –ø—Ä–æ–±—É–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é...')
        const webUrl = 'https://play.google.com/store/apps/details?id=com.ipla.hoccleve'
        Linking.openURL(webUrl)
      })
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
  enableTestMode() {
    this.constructor.TEST_MODE = true
    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω')
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
  disableTestMode() {
    this.constructor.TEST_MODE = false
    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω')
  }
}

export default new VersionCheckService()
